{"version":3,"sources":["pages/chat.js","pages/message.js","pages/Chatbox.js","pages/header.js"],"names":["socket","Message","style","display","justifyContent","this","props","self","Paper","color","background","className","Typography","variant","name","fontFamily","message","React","Component","Chatbox","animateScroll","scrollToBottom","containerId","msgs","data","id","cls","map","e","sender","RoomHeader","roomName","Avatar","charAt","useStyles","makeStyles","theme","footer","height","paddingLeft","alignItems","body","overflowY","Chat","classes","useState","setmsgs","emt","inp","document","getElementById","txt","value","newmsgdata","location","focus","emit","room","concat","useEffect","history","push","console","log","socketIOClient","on","msg","dataToAdd","m","TextField","onKeyPress","key","type","width","IconButton","aria-label","onClick"],"mappings":"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","file":"static/js/4.17970e3e.chunk.js","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport { Paper, TextField, IconButton } from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\"\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Chatbox from \"./Chatbox.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport RoomHeader from \"./header\"\r\nimport \"./chat.css\";\r\n\r\nconst ENDPOINT = \"https://mka-chat.herokuapp.com/\";\r\n\r\nvar socket;\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    height:\"10%\",\r\n    paddingLeft:\"0.5rem\",\r\n    display:\"flex\",\r\n    alignItems:\"center\"\r\n  },\r\n  body:{\r\n    height:\"80%\",\r\n    overflowY:\"auto\"\r\n  }\r\n}));\r\nconst Chat = (props) => {\r\n  //const [msgs,setmsgs] = useState([{message:\"some text\",sender:\"Elon Musk\",self:true},{message:\"some text\",sender:\"Bill Gates\",self:false}]);\r\n  const classes = useStyles();\r\n  const [msgs, setmsgs] = useState([]);\r\n  const emt = () => {\r\n    const inp = document.getElementById(\"message_inp\");\r\n    const txt = inp.value;\r\n    if(!txt) return;\r\n    const newmsgdata = {\r\n      message: txt,\r\n      sender: props.location.name,\r\n      self: true,\r\n    };\r\n    inp.value = \"\";\r\n    inp.focus();\r\n    // here we emit the data to server\r\n    socket.emit(\"chat message\", {\r\n      message: txt,\r\n      room: props.location.room,\r\n      name: props.location.name,\r\n    });\r\n    // re-render\r\n    setmsgs(msgs.concat(newmsgdata));\r\n  };\r\n\r\n  const HandleEnter = (e) => {\r\n    if (e.key === \"Enter\") emt();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(!props.location.room) props.history.push(\"/\")\r\n    console.log(props.location.room)\r\n    socket = socketIOClient(ENDPOINT);\r\n    socket.emit(\"subscribe\", props.location.room);\r\n    socket.on(\"chat message\", (msg) => {\r\n      const dataToAdd = { message: msg.message, sender: msg.name, self: false };\r\n      setmsgs((m) => m.concat(dataToAdd));\r\n    });\r\n  }, [props.location.room]);\r\n\r\n  return (\r\n    <div className=\"chat_page\">\r\n\r\n      <RoomHeader roomName={props.location.room}/>\r\n      <Chatbox cls={classes.body} data={msgs} />\r\n        <Paper className={classes.footer}>\r\n              <TextField\r\n                onKeyPress={HandleEnter}\r\n                variant=\"outlined\"\r\n                id=\"message_inp\"\r\n                type=\"text\"\r\n                style={{ width: \"calc(100% - 10px)\" }}\r\n              />\r\n              <IconButton\r\n                color={'primary'}\r\n                aria-label=\"send\"\r\n                onClick={emt}\r\n              >\r\n                <SendRoundedIcon/>\r\n              </IconButton>\r\n        </Paper>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport \"./message.css\"\r\nimport {Paper,Typography} from '@material-ui/core'\r\n\r\nclass Message extends React.Component{\r\n// #42a5f5,white -  #66bb6a,white - \r\n    render(){\r\n        return(<div style={{display:\"flex\",justifyContent:this.props.self?\"end\":\"start\"}}>\r\n            <Paper style={{color:this.props.self?\"white\":\"black\",background:this.props.self?\"#303f9f\":\"white\"}} className=\"message_body\">\r\n        <Typography variant=\"h6\" className=\"name\">{this.props.name}</Typography>\r\n        <Typography style={{fontFamily:\"\\\"Roboto\\\",\\\"Vazir\\\"\"}} className=\"message\">{this.props.message}</Typography>\r\n            </Paper>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport \"./Chatbox.css\"\r\nimport {animateScroll} from \"react-scroll\";\r\nimport Message from \"./message.js\"\r\n\r\nclass Chatbox extends React.Component{\r\ncomponentDidUpdate(){\r\nanimateScroll.scrollToBottom({containerId:\"messagediv\"})\r\n}\r\n    render(){\r\n        const msgs = this.props.data;\r\n        return(<main id=\"messagediv\" className={this.props.cls}>\r\n          {\r\n            msgs.map(e=>{\r\n              return(\r\n               <Message name={e.sender} message={e.message} self={e.self}/>\r\n              )\r\n            })\r\n          }\r\n        </main>)\r\n    }\r\n}\r\n\r\nexport default Chatbox;","import { Typography, Avatar } from \"@material-ui/core\";\r\n\r\nconst RoomHeader = ({ roomName }) => {\r\n  return (\r\n    <header className=\"_head\">\r\n      <Avatar className={\"avatar\"}>{roomName?roomName.charAt(0):null}</Avatar>\r\n      <Typography variant={\"h5\"}>{roomName}</Typography>\r\n    </header>\r\n  );\r\n};\r\nexport default RoomHeader;\r\n"],"sourceRoot":""}